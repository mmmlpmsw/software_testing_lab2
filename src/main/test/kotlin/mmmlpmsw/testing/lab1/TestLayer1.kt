package mmmlpmsw.testing.lab1

import Functions
import mmmlpmsw.testing.lab1.TestUtilities.Companion.assertBigDouble
import org.junit.jupiter.api.Assertions.assertEquals

import org.junit.jupiter.api.BeforeAll
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.TestInstance
import org.junit.jupiter.api.assertAll
import org.mockito.Mockito
import org.mockito.Mockito.`when`

@TestInstance(TestInstance.Lifecycle.PER_CLASS)
class TestLayer1 {
    private lateinit var calculator: FunctionCalculator
    private val PERIOD = 2 * Math.PI
    private val EPS = 1e-10

    @BeforeAll
    fun initMock() {
        val mock = Mockito.mock(Functions::class.java)
        calculator = FunctionCalculator(mock)

        `when`(mock.sin(0.0)).thenReturn(0.0)
        `when`(mock.sin(0.0 - EPS)).thenReturn(-1.0E-8)
        `when`(mock.sin(-Math.PI/2)).thenReturn(-1.0)
        `when`(mock.sin(-Math.PI/2 - EPS)).thenReturn(-1.0)
        `when`(mock.sin(-Math.PI/2 + EPS)).thenReturn(-1.0)
        `when`(mock.sin(-Math.PI)).thenReturn(-1.2246467991473532E-16)
        `when`(mock.sin(-Math.PI - EPS)).thenReturn(9.99999981676061E-9)
        `when`(mock.sin(-Math.PI + EPS)).thenReturn(-1.000000006168997E-8)
        `when`(mock.sin(-3 * Math.PI/2)).thenReturn(1.0)
        `when`(mock.sin(-3 * Math.PI/2 - EPS)).thenReturn(1.0)
        `when`(mock.sin(-3 * Math.PI/2 + EPS)).thenReturn(1.0)
        `when`(mock.sin(-2 * Math.PI + EPS)).thenReturn(1.000000018415465E-8)
        `when`(mock.cos(0.0)).thenReturn(1.0)
        `when`(mock.cos(0.0 - EPS)).thenReturn(1.0)
        `when`(mock.cos(-Math.PI/2)).thenReturn(6.123233995736766E-17)
        `when`(mock.cos(-Math.PI/2 - EPS)).thenReturn(-9.999999877992951E-9)
        `when`(mock.cos(-Math.PI/2 + EPS)).thenReturn(1.000000000045763E-8)
        `when`(mock.cos(-Math.PI)).thenReturn(-1.0)
        `when`(mock.cos(-Math.PI - EPS)).thenReturn(-1.0)
        `when`(mock.cos(-Math.PI + EPS)).thenReturn(-1.0)
        `when`(mock.cos(-3 * Math.PI/2)).thenReturn(-1.8369701987210297E-16)
        `when`(mock.cos(-3 * Math.PI/2 - EPS)).thenReturn(9.99999975552827E-9)
        `when`(mock.cos(-3 * Math.PI/2 + EPS)).thenReturn(-1.000000012292231E-8)
        `when`(mock.cos(-2 * Math.PI + EPS)).thenReturn(1.0)
        `when`(mock.tan(0.0)).thenReturn(0.0)
        `when`(mock.tan(0.0 - EPS)).thenReturn(-1.0E-8)
        `when`(mock.tan(-Math.PI/2)).thenReturn(-1.633123935319537E16)
        `when`(mock.tan(-Math.PI/2 - EPS)).thenReturn(1.0000000122007051E8)
        `when`(mock.tan(-Math.PI/2 + EPS)).thenReturn(-9.999999999542369E7)
        `when`(mock.tan(-Math.PI)).thenReturn(1.2246467991473532E-16)
        `when`(mock.tan(-Math.PI - EPS)).thenReturn(-9.99999981676061E-9)
        `when`(mock.tan(-Math.PI + EPS)).thenReturn(1.000000006168997E-8)
        `when`(mock.tan(-3 * Math.PI/2)).thenReturn(-5.443746451065123E15)
        `when`(mock.tan(-3 * Math.PI/2 - EPS)).thenReturn(1.0000000244471735E8)
        `when`(mock.tan(-3 * Math.PI/2 + EPS)).thenReturn(-9.999999877077691E7)
        `when`(mock.tan(-2 * Math.PI + EPS)).thenReturn(1.0000000184154651E-8)
        `when`(mock.cot(0.0)).thenReturn(Double.POSITIVE_INFINITY)
        `when`(mock.cot(0.0 - EPS)).thenReturn(-1.0E8)
        `when`(mock.cot(-Math.PI/2)).thenReturn(-6.123233995736766E-17)
        `when`(mock.cot(-Math.PI/2 - EPS)).thenReturn(9.999999877992951E-9)
        `when`(mock.cot(-Math.PI/2 + EPS)).thenReturn(-1.0000000000457631E-8)
        `when`(mock.cot(-Math.PI)).thenReturn(8.165619676597685E15)
        `when`(mock.cot(-Math.PI - EPS)).thenReturn(-1.0000000183239393E8)
        `when`(mock.cot(-Math.PI + EPS)).thenReturn(9.99999993831003E7)
        `when`(mock.cot(-3 * Math.PI/2)).thenReturn(-1.83697019872103E-16)
        `when`(mock.cot(-3 * Math.PI/2 - EPS)).thenReturn(9.99999975552827E-9)
        `when`(mock.cot(-3 * Math.PI/2 + EPS)).thenReturn(-1.000000012292231E-8)
        `when`(mock.cot(-2 * Math.PI + EPS)).thenReturn(9.999999815845352E7)
        `when`(mock.sec(0.0)).thenReturn(1.0)
        `when`(mock.sec(0.0 - EPS)).thenReturn(1.0)
        `when`(mock.sec(-Math.PI/2)).thenReturn(1.633123935319537E16)
        `when`(mock.sec(-Math.PI/2 - EPS)).thenReturn(-1.0000000122007051E8)
        `when`(mock.sec(-Math.PI/2 + EPS)).thenReturn(9.99999999954237E7)
        `when`(mock.sec(-Math.PI)).thenReturn(-1.0)
        `when`(mock.sec(-Math.PI - EPS)).thenReturn(-1.0)
        `when`(mock.sec(-Math.PI + EPS)).thenReturn(-1.0)
        `when`(mock.sec(-3 * Math.PI/2)).thenReturn(-5.443746451065123E15)
        `when`(mock.sec(-3 * Math.PI/2 - EPS)).thenReturn(1.0000000244471735E8)
        `when`(mock.sec(-3 * Math.PI/2 + EPS)).thenReturn(-9.999999877077691E7)
        `when`(mock.sec(-2 * Math.PI + EPS)).thenReturn(1.0)
        `when`(mock.csc(0.0)).thenReturn(Double.POSITIVE_INFINITY)
        `when`(mock.csc(0.0 - EPS)).thenReturn(-1.0E8)
        `when`(mock.csc(-Math.PI/2)).thenReturn(-1.0)
        `when`(mock.csc(-Math.PI/2 - EPS)).thenReturn(-1.0)
        `when`(mock.csc(-Math.PI/2 + EPS)).thenReturn(-1.0)
        `when`(mock.csc(-Math.PI)).thenReturn(-8.165619676597685E15)
        `when`(mock.csc(-Math.PI - EPS)).thenReturn(1.0000000183239393E8)
        `when`(mock.csc(-Math.PI + EPS)).thenReturn(-9.99999993831003E7)
        `when`(mock.csc(-3 * Math.PI/2)).thenReturn(1.0)
        `when`(mock.csc(-3 * Math.PI/2 - EPS)).thenReturn(1.0)
        `when`(mock.csc(-3 * Math.PI/2 + EPS)).thenReturn(1.0)
        `when`(mock.csc(-2 * Math.PI + EPS)).thenReturn(9.999999815845354E7)

        `when`(mock.sin(-0.19)).thenReturn(-0.18885889497650057)
        `when`(mock.sin(-0.2)).thenReturn(-0.19866933079506122)
        `when`(mock.sin(-0.642)).thenReturn(-0.5987984374182153)
        `when`(mock.sin(-0.915)).thenReturn(-0.7925625868748546)
        `when`(mock.sin(-0.9331)).thenReturn(-0.8034693714797926)
        `when`(mock.sin(-0.9351)).thenReturn(-0.8046584559315121)
        `when`(mock.sin(-1.0501)).thenReturn(-0.8674729783616071)
        `when`(mock.sin(-1.0514)).thenReturn(-0.8681189747588872)
        `when`(mock.sin(-1.054)).thenReturn(-0.8694065651016113)
        `when`(mock.sin(-2.284)).thenReturn(-0.7562697254476853)
        `when`(mock.sin(-2.285)).thenReturn(-0.755615087456462)
        `when`(mock.sin(-2.29)).thenReturn(-0.7523305763941707)
        `when`(mock.sin(-2.344)).thenReturn(-0.7156767994719299)
        `when`(mock.sin(-2.356194490192345)).thenReturn(-0.7071067811865476)
        `when`(mock.sin(-2.4)).thenReturn(-0.675463180551151)
        `when`(mock.sin(-2.4227)).thenReturn(-0.6585517584922757)
        `when`(mock.sin(-2.4401)).thenReturn(-0.6453586135871151)
        `when`(mock.sin(-2.5)).thenReturn(-0.5984721441039564)
        `when`(mock.sin(-2.668)).thenReturn(-0.45608645176503637)
        `when`(mock.sin(-3.0)).thenReturn(-0.1411200080598672)
        `when`(mock.sin(-3.3)).thenReturn(0.1577456941432482)
        `when`(mock.sin(-3.38)).thenReturn(0.236155320696897)
        `when`(mock.sin(-3.542)).thenReturn(0.3897935008794568)
        `when`(mock.sin(-3.597)).thenReturn(0.43982818074075963)
        `when`(mock.sin(-5.497)).thenReturn(0.7076631567751693)
        `when`(mock.sin(-5.498)).thenReturn(0.7069562530939006)
        `when`(mock.sin(-5.501)).thenReturn(0.7048313031440786)
        `when`(mock.sin(-5.535)).thenReturn(0.6803098478595606)
        `when`(mock.sin(-5.537)).thenReturn(0.6788426389607648)
        `when`(mock.sin(-6.045)).thenReturn(0.2359395559550809)
        `when`(mock.sin(-6.05)).thenReturn(0.23107778829939224)

        `when`(mock.cos(-0.19)).thenReturn(0.9820042351172703)
        `when`(mock.cos(-0.2)).thenReturn(0.9800665778412416)
        `when`(mock.cos(-0.642)).thenReturn(0.8008997636068472)
        `when`(mock.cos(-0.915)).thenReturn(0.6097905754324501)
        `when`(mock.cos(-0.9331)).thenReturn(0.5953460918607487)
        `when`(mock.cos(-0.9351)).thenReturn(0.5937379634972947)
        `when`(mock.cos(-1.0501)).thenReturn(0.4974843030814569)
        `when`(mock.cos(-1.0514)).thenReturn(0.49635616815304967)
        `when`(mock.cos(-1.054)).thenReturn(0.4940973836787822)
        `when`(mock.cos(-2.284)).thenReturn(-0.6542599654352104)
        `when`(mock.cos(-2.285)).thenReturn(-0.6550159079046579)
        `when`(mock.cos(-2.29)).thenReturn(-0.6587857799181878)
        `when`(mock.cos(-2.344)).thenReturn(-0.6984316134723678)
        `when`(mock.cos(-3 * Math.PI/4)).thenReturn(-0.7071067811865475)
        `when`(mock.cos(-2.4)).thenReturn(-0.7373937155412454)
        `when`(mock.cos(-2.4227)).thenReturn(-0.752535435303037)
        `when`(mock.cos(-2.4401)).thenReturn(-0.7638797417584241)
        `when`(mock.cos(-2.5)).thenReturn(-0.8011436155469337)
        `when`(mock.cos(-2.668)).thenReturn(-0.889935474355517)
        `when`(mock.cos(-3.0)).thenReturn(-0.9899924966004454)
        `when`(mock.cos(-3.3)).thenReturn(-0.9874797699088649)
        `when`(mock.cos(-3.38)).thenReturn(-0.9717153207120621)
        `when`(mock.cos(-3.542)).thenReturn(-0.920902289427134)
        `when`(mock.cos(-3.597)).thenReturn(-0.8980819402628435)
        `when`(mock.cos(-5.497)).thenReturn(0.7065499674778862)
        `when`(mock.cos(-5.498)).thenReturn(0.7072572772417635)
        `when`(mock.cos(-5.501)).thenReturn(0.709374960164383)
        `when`(mock.cos(-5.535)).thenReturn(0.7329246283931939)
        `when`(mock.cos(-5.537)).thenReturn(0.7342837813330652)
        `when`(mock.cos(-6.045)).thenReturn(0.9717677325038732)
        `when`(mock.cos(-6.05)).thenReturn(0.9729352782968974)

        `when`(mock.tan(-0.19)).thenReturn(-0.19231983755543292)
        `when`(mock.tan(-0.2)).thenReturn(-0.2027100355086725)
        `when`(mock.tan(-0.642)).thenReturn(-0.747657153401482)
        `when`(mock.tan(-0.915)).thenReturn(-1.2997291509675868)
        `when`(mock.tan(-0.9331)).thenReturn(-1.3495836832800168)
        `when`(mock.tan(-0.9351)).thenReturn(-1.3552417150350846)
        `when`(mock.tan(-1.0501)).thenReturn(-1.7437192952388874)
        `when`(mock.tan(-1.0514)).thenReturn(-1.748983956398031)
        `when`(mock.tan(-1.054)).thenReturn(-1.7595854457444802)
        `when`(mock.tan(-2.284)).thenReturn(1.1559162495058346)
        `when`(mock.tan(-2.285)).thenReturn(1.1535828036201634)
        `when`(mock.tan(-2.29)).thenReturn(1.1419957736300865)
        `when`(mock.tan(-2.344)).thenReturn(1.0246913021502917)
        `when`(mock.tan(-3 * Math.PI/4)).thenReturn(1.0000000000000002)
        `when`(mock.tan(-2.4)).thenReturn(0.9160142896734107)
        `when`(mock.tan(-2.4227)).thenReturn(0.8751106294776467)
        `when`(mock.tan(-2.4401)).thenReturn(0.8448432106623517)
        `when`(mock.tan(-2.5)).thenReturn(0.7470222972386603)
        `when`(mock.tan(-2.668)).thenReturn(0.5124938435512192)
        `when`(mock.tan(-3.0)).thenReturn(0.1425465430742778)
        `when`(mock.tan(-3.3)).thenReturn(-0.15974574766003222)
        `when`(mock.tan(-3.38)).thenReturn(-0.2430293272764754)
        `when`(mock.tan(-3.542)).thenReturn(-0.4232734627274472)
        `when`(mock.tan(-3.597)).thenReturn(-0.4897417050965686)
        `when`(mock.tan(-5.497)).thenReturn(1.0015755280567866)
        `when`(mock.tan(-5.498)).thenReturn(0.9995743781541042)
        `when`(mock.tan(-5.501)).thenReturn(0.9935948443693989)
        `when`(mock.tan(-5.535)).thenReturn(0.9282125630721649)
        `when`(mock.tan(-5.537)).thenReturn(0.9244962999568791)
        `when`(mock.tan(-6.045)).thenReturn(0.24279418637121758)
        `when`(mock.tan(-6.05)).thenReturn(0.23750581714324204)

        `when`(mock.cot(-0.19)).thenReturn(-5.199671613240454)
        `when`(mock.cot(-0.2)).thenReturn(-4.933154875586893)
        `when`(mock.cot(-0.642)).thenReturn(-1.3375114455208232)
        `when`(mock.cot(-0.915)).thenReturn(-0.7693910683280031)
        `when`(mock.cot(-0.9331)).thenReturn(-0.7409692428776321)
        `when`(mock.cot(-0.9351)).thenReturn(-0.7378757522779705)
        `when`(mock.cot(-1.0501)).thenReturn(-0.5734868007313076)
        `when`(mock.cot(-1.0514)).thenReturn(-0.5717605335039572)
        `when`(mock.cot(-1.054)).thenReturn(-0.5683156805021766)
        `when`(mock.cot(-2.284)).thenReturn(0.8651145793888698)
        `when`(mock.cot(-2.285)).thenReturn(0.8668645171042848)
        `when`(mock.cot(-2.29)).thenReturn(0.8756599832425636)
        `when`(mock.cot(-2.344)).thenReturn(0.9759036676719344)
        `when`(mock.cot(-3 * Math.PI/4)).thenReturn(0.9999999999999998)
        `when`(mock.cot(-2.4)).thenReturn(1.0916860263790569)
        `when`(mock.cot(-2.4227)).thenReturn(1.1427126654796773)
        `when`(mock.cot(-2.4401)).thenReturn(1.1836515786355275)
        `when`(mock.cot(-2.5)).thenReturn(1.3386481283041514)
        `when`(mock.cot(-2.668)).thenReturn(1.9512429516630065)
        `when`(mock.cot(-3.0)).thenReturn(7.015252551434534)
        `when`(mock.cot(-3.3)).thenReturn(-6.259947539437359)
        `when`(mock.cot(-3.38)).thenReturn(-4.114729737380125)
        `when`(mock.cot(-3.542)).thenReturn(-2.3625388503127507)
        `when`(mock.cot(-3.597)).thenReturn(-2.0418926744309376)
        `when`(mock.cot(-5.497)).thenReturn(0.9984269503271077)
        `when`(mock.cot(-5.498)).thenReturn(1.0004258030769875)
        `when`(mock.cot(-5.501)).thenReturn(1.006446446121272)
        `when`(mock.cot(-5.535)).thenReturn(1.0773394368744973)
        `when`(mock.cot(-5.537)).thenReturn(1.0816700943493691)
        `when`(mock.cot(-6.045)).thenReturn(4.118714763915561)
        `when`(mock.cot(-6.05)).thenReturn(4.210423188906107)

        `when`(mock.sec(-0.19)).thenReturn(1.0183255471200494)
        `when`(mock.sec(-0.2)).thenReturn(1.0203388449411928)
        `when`(mock.sec(-0.642)).thenReturn(1.2485956987882054)
        `when`(mock.sec(-0.915)).thenReturn(1.6399072735599791)
        `when`(mock.sec(-0.9331)).thenReturn(1.6796952456251275)
        `when`(mock.sec(-0.9351)).thenReturn(1.6842446693314002)
        `when`(mock.sec(-1.0501)).thenReturn(2.0101136735489367)
        `when`(mock.sec(-1.0514)).thenReturn(2.014682327251051)
        `when`(mock.sec(-1.054)).thenReturn(2.0238925220662782)
        `when`(mock.sec(-2.284)).thenReturn(-1.528444430089506)
        `when`(mock.sec(-2.285)).thenReturn(-1.5266804789503783)
        `when`(mock.sec(-2.29)).thenReturn(-1.5179441185330176)
        `when`(mock.sec(-2.344)).thenReturn(-1.431779405042013)
        `when`(mock.sec(-3 * Math.PI/4)).thenReturn(-1.4142135623730951)
        `when`(mock.sec(-2.4)).thenReturn(-1.3561276410743508)
        `when`(mock.sec(-2.4227)).thenReturn(-1.3288410792208236)
        `when`(mock.sec(-2.4401)).thenReturn(-1.3091065848899663)
        `when`(mock.sec(-2.5)).thenReturn(-1.2482156514688179)
        `when`(mock.sec(-2.668)).thenReturn(-1.1236769730122182)
        `when`(mock.sec(-3.0)).thenReturn(-1.0101086659079939)
        `when`(mock.sec(-3.3)).thenReturn(-1.0126789737599289)
        `when`(mock.sec(-3.38)).thenReturn(-1.0291079894337893)
        `when`(mock.sec(-3.542)).thenReturn(-1.085891534293036)
        `when`(mock.sec(-3.597)).thenReturn(-1.113484143448345)
        `when`(mock.sec(-5.497)).thenReturn(1.4153280674113091)
        `when`(mock.sec(-5.498)).thenReturn(1.4139126343102548)
        `when`(mock.sec(-5.501)).thenReturn(1.4096917091185044)
        `when`(mock.sec(-5.535)).thenReturn(1.3643967759581515)
        `when`(mock.sec(-5.537)).thenReturn(1.3618712893052558)
        `when`(mock.sec(-6.045)).thenReturn(1.0290524850247735)
        `when`(mock.sec(-6.05)).thenReturn(1.0278175972305976)

        `when`(mock.csc(-0.19)).thenReturn(-5.294958440397676)
        `when`(mock.csc(-0.2)).thenReturn(-5.033489547672344)
        `when`(mock.csc(-0.642)).thenReturn(-1.670011037957295)
        `when`(mock.csc(-0.915)).thenReturn(-1.2617300091631751)
        `when`(mock.csc(-0.9331)).thenReturn(-1.2446025144160087)
        `when`(mock.csc(-0.9351)).thenReturn(-1.2427633024030686)
        `when`(mock.csc(-1.0501)).thenReturn(-1.152773659749836)
        `when`(mock.csc(-1.0514)).thenReturn(-1.1519158422700548)
        `when`(mock.csc(-1.054)).thenReturn(-1.1502098559413636)
        `when`(mock.csc(-2.284)).thenReturn(-1.322279560256144)
        `when`(mock.csc(-2.285)).thenReturn(-1.323425136157858)
        `when`(mock.csc(-2.29)).thenReturn(-1.3292029213977703)
        `when`(mock.csc(-2.344)).thenReturn(-1.3972787726776406)
        `when`(mock.csc(-3 * Math.PI/4)).thenReturn(-1.414213562373095)
        `when`(mock.csc(-2.4)).thenReturn(-1.4804655957472619)
        `when`(mock.csc(-2.4227)).thenReturn(-1.5184835316353185)
        `when`(mock.csc(-2.4401)).thenReturn(-1.5495260758071727)
        `when`(mock.csc(-2.5)).thenReturn(-1.67092154555868)
        `when`(mock.csc(-2.668)).thenReturn(-2.192566773536113)
        `when`(mock.csc(-3.0)).thenReturn(-7.086167395737187)
        `when`(mock.csc(-3.3)).thenReturn(6.339317250028417)
        `when`(mock.csc(-3.38)).thenReturn(4.2345012470986845)
        `when`(mock.csc(-3.542)).thenReturn(2.565460936993018)
        `when`(mock.csc(-3.597)).thenReturn(2.273615115602183)
        `when`(mock.csc(-5.497)).thenReturn(1.4131016860578325)
        `when`(mock.csc(-5.498)).thenReturn(1.4145146826605355)
        `when`(mock.csc(-5.501)).thenReturn(1.418779210768941)
        `when`(mock.csc(-5.535)).thenReturn(1.4699184542841344)
        `when`(mock.csc(-5.537)).thenReturn(1.473095445994513)
        `when`(mock.csc(-6.045)).thenReturn(4.238373662915531)
        `when`(mock.csc(-6.05)).thenReturn(4.327547045345466)


//===========================================================================================
//                        positive values
//===========================================================================================

        `when`(mock.ln(0.35)).thenReturn(-1.0498221244986778)
        `when`(mock.ln(4.339)).thenReturn(1.4676439068162137)
        `when`(mock.ln(10.0)).thenReturn(2.302585092994046)
        `when`(mock.ln(100000.0)).thenReturn(11.512925464970229)
        `when`(mock.ln(Double.POSITIVE_INFINITY)).thenReturn(Double.NaN)

        `when`(mock.log2(0.35)).thenReturn(-1.5145731728297585)
        `when`(mock.log2(4.339)).thenReturn(2.1173625861546554)
        `when`(mock.log2(10.0)).thenReturn(3.3219280948873626)
        `when`(mock.log2(100000.0)).thenReturn(16.609640474436812)
        `when`(mock.log2(Double.POSITIVE_INFINITY)).thenReturn(Double.NaN)

        `when`(mock.log5(0.35)).thenReturn(-0.6522911610246187)
        `when`(mock.log5(4.339)).thenReturn(0.9118984307984652)
        `when`(mock.log5(10.0)).thenReturn(1.4306765580733933)
        `when`(mock.log5(100000.0)).thenReturn(7.153382790366966)
        `when`(mock.log5(Double.POSITIVE_INFINITY)).thenReturn(Double.NaN)

        `when`(mock.log10(0.35)).thenReturn(-0.4559319556497244)
        `when`(mock.log10(4.339)).thenReturn(0.637389650129212)
        `when`(mock.log10(10.0)).thenReturn(1.0)
        `when`(mock.log10(100000.0)).thenReturn(5.0)
        `when`(mock.log10(Double.POSITIVE_INFINITY)).thenReturn(Double.NaN)

//=======================================================================================================

        `when`(mock.sin(-PERIOD - 0.0)).thenReturn(0.0)
        `when`(mock.sin(-PERIOD - 0.0 - EPS)).thenReturn(-1.0E-8)
        `when`(mock.sin(-PERIOD -Math.PI/2)).thenReturn(-1.0)
        `when`(mock.sin(-PERIOD -Math.PI/2 - EPS)).thenReturn(-1.0)
        `when`(mock.sin(-PERIOD -Math.PI/2 + EPS)).thenReturn(-1.0)
        `when`(mock.sin(-PERIOD -Math.PI)).thenReturn(-1.2246467991473532E-16)
        `when`(mock.sin(-PERIOD -Math.PI - EPS)).thenReturn(9.99999981676061E-9)
        `when`(mock.sin(-PERIOD -Math.PI + EPS)).thenReturn(-1.000000006168997E-8)
        `when`(mock.sin(-PERIOD -3 * Math.PI/2)).thenReturn(1.0)
        `when`(mock.sin(-PERIOD -3 * Math.PI/2 - EPS)).thenReturn(1.0)
        `when`(mock.sin(-PERIOD -3 * Math.PI/2 + EPS)).thenReturn(1.0)
        `when`(mock.sin(-PERIOD -2 * Math.PI + EPS)).thenReturn(1.000000018415465E-8)
        `when`(mock.cos(-PERIOD - 0.0)).thenReturn(1.0)
        `when`(mock.cos(-PERIOD - 0.0 - EPS)).thenReturn(1.0)
        `when`(mock.cos(-PERIOD -Math.PI/2)).thenReturn(6.123233995736766E-17)
        `when`(mock.cos(-PERIOD -Math.PI/2 - EPS)).thenReturn(-9.999999877992951E-9)
        `when`(mock.cos(-PERIOD -Math.PI/2 + EPS)).thenReturn(1.000000000045763E-8)
        `when`(mock.cos(-PERIOD -Math.PI)).thenReturn(-1.0)
        `when`(mock.cos(-PERIOD -Math.PI - EPS)).thenReturn(-1.0)
        `when`(mock.cos(-PERIOD -Math.PI + EPS)).thenReturn(-1.0)
        `when`(mock.cos(-PERIOD -3 * Math.PI/2)).thenReturn(-1.8369701987210297E-16)
        `when`(mock.cos(-PERIOD -3 * Math.PI/2 - EPS)).thenReturn(9.99999975552827E-9)
        `when`(mock.cos(-PERIOD -3 * Math.PI/2 + EPS)).thenReturn(-1.000000012292231E-8)
        `when`(mock.cos(-PERIOD -2 * Math.PI + EPS)).thenReturn(1.0)
        `when`(mock.tan(-PERIOD - 0.0)).thenReturn(0.0)
        `when`(mock.tan(-PERIOD - 0.0 - EPS)).thenReturn(-1.0E-8)
        `when`(mock.tan(-PERIOD -Math.PI/2)).thenReturn(-1.633123935319537E16)
        `when`(mock.tan(-PERIOD -Math.PI/2 - EPS)).thenReturn(1.0000000122007051E8)
        `when`(mock.tan(-PERIOD -Math.PI/2 + EPS)).thenReturn(-9.999999999542369E7)
        `when`(mock.tan(-PERIOD -Math.PI)).thenReturn(1.2246467991473532E-16)
        `when`(mock.tan(-PERIOD -Math.PI - EPS)).thenReturn(-9.99999981676061E-9)
        `when`(mock.tan(-PERIOD -Math.PI + EPS)).thenReturn(1.000000006168997E-8)
        `when`(mock.tan(-PERIOD -3 * Math.PI/2)).thenReturn(-5.443746451065123E15)
        `when`(mock.tan(-PERIOD -3 * Math.PI/2 - EPS)).thenReturn(1.0000000244471735E8)
        `when`(mock.tan(-PERIOD -3 * Math.PI/2 + EPS)).thenReturn(-9.999999877077691E7)
        `when`(mock.tan(-PERIOD -2 * Math.PI + EPS)).thenReturn(1.0000000184154651E-8)
        `when`(mock.cot(-PERIOD - 0.0)).thenReturn(Double.POSITIVE_INFINITY)
        `when`(mock.cot(-PERIOD - 0.0 - EPS)).thenReturn(-1.0E8)
        `when`(mock.cot(-PERIOD -Math.PI/2)).thenReturn(-6.123233995736766E-17)
        `when`(mock.cot(-PERIOD -Math.PI/2 - EPS)).thenReturn(9.999999877992951E-9)
        `when`(mock.cot(-PERIOD -Math.PI/2 + EPS)).thenReturn(-1.0000000000457631E-8)
        `when`(mock.cot(-PERIOD -Math.PI)).thenReturn(8.165619676597685E15)
        `when`(mock.cot(-PERIOD -Math.PI - EPS)).thenReturn(-1.0000000183239393E8)
        `when`(mock.cot(-PERIOD -Math.PI + EPS)).thenReturn(9.99999993831003E7)
        `when`(mock.cot(-PERIOD -3 * Math.PI/2)).thenReturn(-1.83697019872103E-16)
        `when`(mock.cot(-PERIOD -3 * Math.PI/2 - EPS)).thenReturn(9.99999975552827E-9)
        `when`(mock.cot(-PERIOD -3 * Math.PI/2 + EPS)).thenReturn(-1.000000012292231E-8)
        `when`(mock.cot(-PERIOD -2 * Math.PI + EPS)).thenReturn(9.999999815845352E7)
        `when`(mock.sec(-PERIOD - 0.0)).thenReturn(1.0)
        `when`(mock.sec(-PERIOD - 0.0 - EPS)).thenReturn(1.0)
        `when`(mock.sec(-PERIOD -Math.PI/2)).thenReturn(1.633123935319537E16)
        `when`(mock.sec(-PERIOD -Math.PI/2 - EPS)).thenReturn(-1.0000000122007051E8)
        `when`(mock.sec(-PERIOD -Math.PI/2 + EPS)).thenReturn(9.99999999954237E7)
        `when`(mock.sec(-PERIOD -Math.PI)).thenReturn(-1.0)
        `when`(mock.sec(-PERIOD -Math.PI - EPS)).thenReturn(-1.0)
        `when`(mock.sec(-PERIOD -Math.PI + EPS)).thenReturn(-1.0)
        `when`(mock.sec(-PERIOD -3 * Math.PI/2)).thenReturn(-5.443746451065123E15)
        `when`(mock.sec(-PERIOD -3 * Math.PI/2 - EPS)).thenReturn(1.0000000244471735E8)
        `when`(mock.sec(-PERIOD -3 * Math.PI/2 + EPS)).thenReturn(-9.999999877077691E7)
        `when`(mock.sec(-PERIOD -2 * Math.PI + EPS)).thenReturn(1.0)
        `when`(mock.csc(-PERIOD - 0.0)).thenReturn(Double.POSITIVE_INFINITY)
        `when`(mock.csc(-PERIOD - 0.0 - EPS)).thenReturn(-1.0E8)
        `when`(mock.csc(-PERIOD -Math.PI/2)).thenReturn(-1.0)
        `when`(mock.csc(-PERIOD -Math.PI/2 - EPS)).thenReturn(-1.0)
        `when`(mock.csc(-PERIOD -Math.PI/2 + EPS)).thenReturn(-1.0)
        `when`(mock.csc(-PERIOD -Math.PI)).thenReturn(-8.165619676597685E15)
        `when`(mock.csc(-PERIOD -Math.PI - EPS)).thenReturn(1.0000000183239393E8)
        `when`(mock.csc(-PERIOD -Math.PI + EPS)).thenReturn(-9.99999993831003E7)
        `when`(mock.csc(-PERIOD -3 * Math.PI/2)).thenReturn(1.0)
        `when`(mock.csc(-PERIOD -3 * Math.PI/2 - EPS)).thenReturn(1.0)
        `when`(mock.csc(-PERIOD -3 * Math.PI/2 + EPS)).thenReturn(1.0)
        `when`(mock.csc(-PERIOD -2 * Math.PI + EPS)).thenReturn(9.999999815845354E7)

        `when`(mock.sin(-PERIOD -0.19)).thenReturn(-0.18885889497650057)
        `when`(mock.sin(-PERIOD -0.2)).thenReturn(-0.19866933079506122)
        `when`(mock.sin(-PERIOD -0.642)).thenReturn(-0.5987984374182153)
        `when`(mock.sin(-PERIOD -0.915)).thenReturn(-0.7925625868748546)
        `when`(mock.sin(-PERIOD -0.9331)).thenReturn(-0.8034693714797926)
        `when`(mock.sin(-PERIOD -0.9351)).thenReturn(-0.8046584559315121)
        `when`(mock.sin(-PERIOD -1.0501)).thenReturn(-0.8674729783616071)
        `when`(mock.sin(-PERIOD -1.0514)).thenReturn(-0.8681189747588872)
        `when`(mock.sin(-PERIOD -1.054)).thenReturn(-0.8694065651016113)
        `when`(mock.sin(-PERIOD -2.284)).thenReturn(-0.7562697254476853)
        `when`(mock.sin(-PERIOD -2.285)).thenReturn(-0.755615087456462)
        `when`(mock.sin(-PERIOD -2.29)).thenReturn(-0.7523305763941707)
        `when`(mock.sin(-PERIOD -2.344)).thenReturn(-0.7156767994719299)
        `when`(mock.sin(-PERIOD -2.356194490192345)).thenReturn(-0.7071067811865476)
        `when`(mock.sin(-PERIOD -2.4)).thenReturn(-0.675463180551151)
        `when`(mock.sin(-PERIOD -2.4227)).thenReturn(-0.6585517584922757)
        `when`(mock.sin(-PERIOD -2.4401)).thenReturn(-0.6453586135871151)
        `when`(mock.sin(-PERIOD -2.5)).thenReturn(-0.5984721441039564)
        `when`(mock.sin(-PERIOD -2.668)).thenReturn(-0.45608645176503637)
        `when`(mock.sin(-PERIOD -3.0)).thenReturn(-0.1411200080598672)
        `when`(mock.sin(-PERIOD -3.3)).thenReturn(0.1577456941432482)
        `when`(mock.sin(-PERIOD -3.38)).thenReturn(0.236155320696897)
        `when`(mock.sin(-PERIOD -3.542)).thenReturn(0.3897935008794568)
        `when`(mock.sin(-PERIOD -3.597)).thenReturn(0.43982818074075963)
        `when`(mock.sin(-PERIOD -5.497)).thenReturn(0.7076631567751693)
        `when`(mock.sin(-PERIOD -5.498)).thenReturn(0.7069562530939006)
        `when`(mock.sin(-PERIOD -5.501)).thenReturn(0.7048313031440786)
        `when`(mock.sin(-PERIOD -5.535)).thenReturn(0.6803098478595606)
        `when`(mock.sin(-PERIOD -5.537)).thenReturn(0.6788426389607648)
        `when`(mock.sin(-PERIOD -6.045)).thenReturn(0.2359395559550809)
        `when`(mock.sin(-PERIOD -6.05)).thenReturn(0.23107778829939224)

        `when`(mock.cos(-PERIOD -0.19)).thenReturn(0.9820042351172703)
        `when`(mock.cos(-PERIOD -0.2)).thenReturn(0.9800665778412416)
        `when`(mock.cos(-PERIOD -0.642)).thenReturn(0.8008997636068472)
        `when`(mock.cos(-PERIOD -0.915)).thenReturn(0.6097905754324501)
        `when`(mock.cos(-PERIOD -0.9331)).thenReturn(0.5953460918607487)
        `when`(mock.cos(-PERIOD -0.9351)).thenReturn(0.5937379634972947)
        `when`(mock.cos(-PERIOD -1.0501)).thenReturn(0.4974843030814569)
        `when`(mock.cos(-PERIOD -1.0514)).thenReturn(0.49635616815304967)
        `when`(mock.cos(-PERIOD -1.054)).thenReturn(0.4940973836787822)
        `when`(mock.cos(-PERIOD -2.284)).thenReturn(-0.6542599654352104)
        `when`(mock.cos(-PERIOD -2.285)).thenReturn(-0.6550159079046579)
        `when`(mock.cos(-PERIOD -2.29)).thenReturn(-0.6587857799181878)
        `when`(mock.cos(-PERIOD -2.344)).thenReturn(-0.6984316134723678)
        `when`(mock.cos(-PERIOD -3 * Math.PI/4)).thenReturn(-0.7071067811865475)
        `when`(mock.cos(-PERIOD -2.4)).thenReturn(-0.7373937155412454)
        `when`(mock.cos(-PERIOD -2.4227)).thenReturn(-0.752535435303037)
        `when`(mock.cos(-PERIOD -2.4401)).thenReturn(-0.7638797417584241)
        `when`(mock.cos(-PERIOD -2.5)).thenReturn(-0.8011436155469337)
        `when`(mock.cos(-PERIOD -2.668)).thenReturn(-0.889935474355517)
        `when`(mock.cos(-PERIOD -3.0)).thenReturn(-0.9899924966004454)
        `when`(mock.cos(-PERIOD -3.3)).thenReturn(-0.9874797699088649)
        `when`(mock.cos(-PERIOD -3.38)).thenReturn(-0.9717153207120621)
        `when`(mock.cos(-PERIOD -3.542)).thenReturn(-0.920902289427134)
        `when`(mock.cos(-PERIOD -3.597)).thenReturn(-0.8980819402628435)
        `when`(mock.cos(-PERIOD -5.497)).thenReturn(0.7065499674778862)
        `when`(mock.cos(-PERIOD -5.498)).thenReturn(0.7072572772417635)
        `when`(mock.cos(-PERIOD -5.501)).thenReturn(0.709374960164383)
        `when`(mock.cos(-PERIOD -5.535)).thenReturn(0.7329246283931939)
        `when`(mock.cos(-PERIOD -5.537)).thenReturn(0.7342837813330652)
        `when`(mock.cos(-PERIOD -6.045)).thenReturn(0.9717677325038732)
        `when`(mock.cos(-PERIOD -6.05)).thenReturn(0.9729352782968974)

        `when`(mock.tan(-PERIOD -0.19)).thenReturn(-0.19231983755543292)
        `when`(mock.tan(-PERIOD -0.2)).thenReturn(-0.2027100355086725)
        `when`(mock.tan(-PERIOD -0.642)).thenReturn(-0.747657153401482)
        `when`(mock.tan(-PERIOD -0.915)).thenReturn(-1.2997291509675868)
        `when`(mock.tan(-PERIOD -0.9331)).thenReturn(-1.3495836832800168)
        `when`(mock.tan(-PERIOD -0.9351)).thenReturn(-1.3552417150350846)
        `when`(mock.tan(-PERIOD -1.0501)).thenReturn(-1.7437192952388874)
        `when`(mock.tan(-PERIOD -1.0514)).thenReturn(-1.748983956398031)
        `when`(mock.tan(-PERIOD -1.054)).thenReturn(-1.7595854457444802)
        `when`(mock.tan(-PERIOD -2.284)).thenReturn(1.1559162495058346)
        `when`(mock.tan(-PERIOD -2.285)).thenReturn(1.1535828036201634)
        `when`(mock.tan(-PERIOD -2.29)).thenReturn(1.1419957736300865)
        `when`(mock.tan(-PERIOD -2.344)).thenReturn(1.0246913021502917)
        `when`(mock.tan(-PERIOD -3 * Math.PI/4)).thenReturn(1.0000000000000002)
        `when`(mock.tan(-PERIOD -2.4)).thenReturn(0.9160142896734107)
        `when`(mock.tan(-PERIOD -2.4227)).thenReturn(0.8751106294776467)
        `when`(mock.tan(-PERIOD -2.4401)).thenReturn(0.8448432106623517)
        `when`(mock.tan(-PERIOD -2.5)).thenReturn(0.7470222972386603)
        `when`(mock.tan(-PERIOD -2.668)).thenReturn(0.5124938435512192)
        `when`(mock.tan(-PERIOD -3.0)).thenReturn(0.1425465430742778)
        `when`(mock.tan(-PERIOD -3.3)).thenReturn(-0.15974574766003222)
        `when`(mock.tan(-PERIOD -3.38)).thenReturn(-0.2430293272764754)
        `when`(mock.tan(-PERIOD -3.542)).thenReturn(-0.4232734627274472)
        `when`(mock.tan(-PERIOD -3.597)).thenReturn(-0.4897417050965686)
        `when`(mock.tan(-PERIOD -5.497)).thenReturn(1.0015755280567866)
        `when`(mock.tan(-PERIOD -5.498)).thenReturn(0.9995743781541042)
        `when`(mock.tan(-PERIOD -5.501)).thenReturn(0.9935948443693989)
        `when`(mock.tan(-PERIOD -5.535)).thenReturn(0.9282125630721649)
        `when`(mock.tan(-PERIOD -5.537)).thenReturn(0.9244962999568791)
        `when`(mock.tan(-PERIOD -6.045)).thenReturn(0.24279418637121758)
        `when`(mock.tan(-PERIOD -6.05)).thenReturn(0.23750581714324204)

        `when`(mock.cot(-PERIOD -0.19)).thenReturn(-5.199671613240454)
        `when`(mock.cot(-PERIOD -0.2)).thenReturn(-4.933154875586893)
        `when`(mock.cot(-PERIOD -0.642)).thenReturn(-1.3375114455208232)
        `when`(mock.cot(-PERIOD -0.915)).thenReturn(-0.7693910683280031)
        `when`(mock.cot(-PERIOD -0.9331)).thenReturn(-0.7409692428776321)
        `when`(mock.cot(-PERIOD -0.9351)).thenReturn(-0.7378757522779705)
        `when`(mock.cot(-PERIOD -1.0501)).thenReturn(-0.5734868007313076)
        `when`(mock.cot(-PERIOD -1.0514)).thenReturn(-0.5717605335039572)
        `when`(mock.cot(-PERIOD -1.054)).thenReturn(-0.5683156805021766)
        `when`(mock.cot(-PERIOD -2.284)).thenReturn(0.8651145793888698)
        `when`(mock.cot(-PERIOD -2.285)).thenReturn(0.8668645171042848)
        `when`(mock.cot(-PERIOD -2.29)).thenReturn(0.8756599832425636)
        `when`(mock.cot(-PERIOD -2.344)).thenReturn(0.9759036676719344)
        `when`(mock.cot(-PERIOD -3 * Math.PI/4)).thenReturn(0.9999999999999998)
        `when`(mock.cot(-PERIOD -2.4)).thenReturn(1.0916860263790569)
        `when`(mock.cot(-PERIOD -2.4227)).thenReturn(1.1427126654796773)
        `when`(mock.cot(-PERIOD -2.4401)).thenReturn(1.1836515786355275)
        `when`(mock.cot(-PERIOD -2.5)).thenReturn(1.3386481283041514)
        `when`(mock.cot(-PERIOD -2.668)).thenReturn(1.9512429516630065)
        `when`(mock.cot(-PERIOD -3.0)).thenReturn(7.015252551434534)
        `when`(mock.cot(-PERIOD -3.3)).thenReturn(-6.259947539437359)
        `when`(mock.cot(-PERIOD -3.38)).thenReturn(-4.114729737380125)
        `when`(mock.cot(-PERIOD -3.542)).thenReturn(-2.3625388503127507)
        `when`(mock.cot(-PERIOD -3.597)).thenReturn(-2.0418926744309376)
        `when`(mock.cot(-PERIOD -5.497)).thenReturn(0.9984269503271077)
        `when`(mock.cot(-PERIOD -5.498)).thenReturn(1.0004258030769875)
        `when`(mock.cot(-PERIOD -5.501)).thenReturn(1.006446446121272)
        `when`(mock.cot(-PERIOD -5.535)).thenReturn(1.0773394368744973)
        `when`(mock.cot(-PERIOD -5.537)).thenReturn(1.0816700943493691)
        `when`(mock.cot(-PERIOD -6.045)).thenReturn(4.118714763915561)
        `when`(mock.cot(-PERIOD -6.05)).thenReturn(4.210423188906107)

        `when`(mock.sec(-PERIOD -0.19)).thenReturn(1.0183255471200494)
        `when`(mock.sec(-PERIOD -0.2)).thenReturn(1.0203388449411928)
        `when`(mock.sec(-PERIOD -0.642)).thenReturn(1.2485956987882054)
        `when`(mock.sec(-PERIOD -0.915)).thenReturn(1.6399072735599791)
        `when`(mock.sec(-PERIOD -0.9331)).thenReturn(1.6796952456251275)
        `when`(mock.sec(-PERIOD -0.9351)).thenReturn(1.6842446693314002)
        `when`(mock.sec(-PERIOD -1.0501)).thenReturn(2.0101136735489367)
        `when`(mock.sec(-PERIOD -1.0514)).thenReturn(2.014682327251051)
        `when`(mock.sec(-PERIOD -1.054)).thenReturn(2.0238925220662782)
        `when`(mock.sec(-PERIOD -2.284)).thenReturn(-1.528444430089506)
        `when`(mock.sec(-PERIOD -2.285)).thenReturn(-1.5266804789503783)
        `when`(mock.sec(-PERIOD -2.29)).thenReturn(-1.5179441185330176)
        `when`(mock.sec(-PERIOD -2.344)).thenReturn(-1.431779405042013)
        `when`(mock.sec(-PERIOD -3 * Math.PI/4)).thenReturn(-1.4142135623730951)
        `when`(mock.sec(-PERIOD -2.4)).thenReturn(-1.3561276410743508)
        `when`(mock.sec(-PERIOD -2.4227)).thenReturn(-1.3288410792208236)
        `when`(mock.sec(-PERIOD -2.4401)).thenReturn(-1.3091065848899663)
        `when`(mock.sec(-PERIOD -2.5)).thenReturn(-1.2482156514688179)
        `when`(mock.sec(-PERIOD -2.668)).thenReturn(-1.1236769730122182)
        `when`(mock.sec(-PERIOD -3.0)).thenReturn(-1.0101086659079939)
        `when`(mock.sec(-PERIOD -3.3)).thenReturn(-1.0126789737599289)
        `when`(mock.sec(-PERIOD -3.38)).thenReturn(-1.0291079894337893)
        `when`(mock.sec(-PERIOD -3.542)).thenReturn(-1.085891534293036)
        `when`(mock.sec(-PERIOD -3.597)).thenReturn(-1.113484143448345)
        `when`(mock.sec(-PERIOD -5.497)).thenReturn(1.4153280674113091)
        `when`(mock.sec(-PERIOD -5.498)).thenReturn(1.4139126343102548)
        `when`(mock.sec(-PERIOD -5.501)).thenReturn(1.4096917091185044)
        `when`(mock.sec(-PERIOD -5.535)).thenReturn(1.3643967759581515)
        `when`(mock.sec(-PERIOD -5.537)).thenReturn(1.3618712893052558)
        `when`(mock.sec(-PERIOD -6.045)).thenReturn(1.0290524850247735)
        `when`(mock.sec(-PERIOD -6.05)).thenReturn(1.0278175972305976)

        `when`(mock.csc(-PERIOD -0.19)).thenReturn(-5.294958440397676)
        `when`(mock.csc(-PERIOD -0.2)).thenReturn(-5.033489547672344)
        `when`(mock.csc(-PERIOD -0.642)).thenReturn(-1.670011037957295)
        `when`(mock.csc(-PERIOD -0.915)).thenReturn(-1.2617300091631751)
        `when`(mock.csc(-PERIOD -0.9331)).thenReturn(-1.2446025144160087)
        `when`(mock.csc(-PERIOD -0.9351)).thenReturn(-1.2427633024030686)
        `when`(mock.csc(-PERIOD -1.0501)).thenReturn(-1.152773659749836)
        `when`(mock.csc(-PERIOD -1.0514)).thenReturn(-1.1519158422700548)
        `when`(mock.csc(-PERIOD -1.054)).thenReturn(-1.1502098559413636)
        `when`(mock.csc(-PERIOD -2.284)).thenReturn(-1.322279560256144)
        `when`(mock.csc(-PERIOD -2.285)).thenReturn(-1.323425136157858)
        `when`(mock.csc(-PERIOD -2.29)).thenReturn(-1.3292029213977703)
        `when`(mock.csc(-PERIOD -2.344)).thenReturn(-1.3972787726776406)
        `when`(mock.csc(-PERIOD -3 * Math.PI/4)).thenReturn(-1.414213562373095)
        `when`(mock.csc(-PERIOD -2.4)).thenReturn(-1.4804655957472619)
        `when`(mock.csc(-PERIOD -2.4227)).thenReturn(-1.5184835316353185)
        `when`(mock.csc(-PERIOD -2.4401)).thenReturn(-1.5495260758071727)
        `when`(mock.csc(-PERIOD -2.5)).thenReturn(-1.67092154555868)
        `when`(mock.csc(-PERIOD -2.668)).thenReturn(-2.192566773536113)
        `when`(mock.csc(-PERIOD -3.0)).thenReturn(-7.086167395737187)
        `when`(mock.csc(-PERIOD -3.3)).thenReturn(6.339317250028417)
        `when`(mock.csc(-PERIOD -3.38)).thenReturn(4.2345012470986845)
        `when`(mock.csc(-PERIOD -3.542)).thenReturn(2.565460936993018)
        `when`(mock.csc(-PERIOD -3.597)).thenReturn(2.273615115602183)
        `when`(mock.csc(-PERIOD -5.497)).thenReturn(1.4131016860578325)
        `when`(mock.csc(-PERIOD -5.498)).thenReturn(1.4145146826605355)
        `when`(mock.csc(-PERIOD -5.501)).thenReturn(1.418779210768941)
        `when`(mock.csc(-PERIOD -5.535)).thenReturn(1.4699184542841344)
        `when`(mock.csc(-PERIOD -5.537)).thenReturn(1.473095445994513)
        `when`(mock.csc(-PERIOD -6.045)).thenReturn(4.238373662915531)
        `when`(mock.csc(-PERIOD -6.05)).thenReturn(4.327547045345466)

//=======================================================================================================

        `when`(mock.sin(-100 * PERIOD - 0.0)).thenReturn(0.0)
        `when`(mock.sin(-100 * PERIOD - 0.0 - EPS)).thenReturn(-1.0E-8)
        `when`(mock.sin(-100 * PERIOD -Math.PI/2)).thenReturn(-1.0)
        `when`(mock.sin(-100 * PERIOD -Math.PI/2 - EPS)).thenReturn(-1.0)
        `when`(mock.sin(-100 * PERIOD -Math.PI/2 + EPS)).thenReturn(-1.0)
        `when`(mock.sin(-100 * PERIOD -Math.PI)).thenReturn(-1.2246467991473532E-16)
        `when`(mock.sin(-100 * PERIOD -Math.PI - EPS)).thenReturn(9.99999981676061E-9)
        `when`(mock.sin(-100 * PERIOD -Math.PI + EPS)).thenReturn(-1.000000006168997E-8)
        `when`(mock.sin(-100 * PERIOD -3 * Math.PI/2)).thenReturn(1.0)
        `when`(mock.sin(-100 * PERIOD -3 * Math.PI/2 - EPS)).thenReturn(1.0)
        `when`(mock.sin(-100 * PERIOD -3 * Math.PI/2 + EPS)).thenReturn(1.0)
        `when`(mock.sin(-100 * PERIOD -2 * Math.PI + EPS)).thenReturn(1.000000018415465E-8)
        `when`(mock.cos(-100 * PERIOD - 0.0)).thenReturn(1.0)
        `when`(mock.cos(-100 * PERIOD - 0.0 - EPS)).thenReturn(1.0)
        `when`(mock.cos(-100 * PERIOD -Math.PI/2)).thenReturn(6.123233995736766E-17)
        `when`(mock.cos(-100 * PERIOD -Math.PI/2 - EPS)).thenReturn(-9.999999877992951E-9)
        `when`(mock.cos(-100 * PERIOD -Math.PI/2 + EPS)).thenReturn(1.000000000045763E-8)
        `when`(mock.cos(-100 * PERIOD -Math.PI)).thenReturn(-1.0)
        `when`(mock.cos(-100 * PERIOD -Math.PI - EPS)).thenReturn(-1.0)
        `when`(mock.cos(-100 * PERIOD -Math.PI + EPS)).thenReturn(-1.0)
        `when`(mock.cos(-100 * PERIOD -3 * Math.PI/2)).thenReturn(-1.8369701987210297E-16)
        `when`(mock.cos(-100 * PERIOD -3 * Math.PI/2 - EPS)).thenReturn(9.99999975552827E-9)
        `when`(mock.cos(-100 * PERIOD -3 * Math.PI/2 + EPS)).thenReturn(-1.000000012292231E-8)
        `when`(mock.cos(-100 * PERIOD -2 * Math.PI + EPS)).thenReturn(1.0)
        `when`(mock.tan(-100 * PERIOD - 0.0)).thenReturn(0.0)
        `when`(mock.tan(-100 * PERIOD - 0.0 - EPS)).thenReturn(-1.0E-8)
        `when`(mock.tan(-100 * PERIOD -Math.PI/2)).thenReturn(-1.633123935319537E16)
        `when`(mock.tan(-100 * PERIOD -Math.PI/2 - EPS)).thenReturn(1.0000000122007051E8)
        `when`(mock.tan(-100 * PERIOD -Math.PI/2 + EPS)).thenReturn(-9.999999999542369E7)
        `when`(mock.tan(-100 * PERIOD -Math.PI)).thenReturn(1.2246467991473532E-16)
        `when`(mock.tan(-100 * PERIOD -Math.PI - EPS)).thenReturn(-9.99999981676061E-9)
        `when`(mock.tan(-100 * PERIOD -Math.PI + EPS)).thenReturn(1.000000006168997E-8)
        `when`(mock.tan(-100 * PERIOD -3 * Math.PI/2)).thenReturn(-5.443746451065123E15)
        `when`(mock.tan(-100 * PERIOD -3 * Math.PI/2 - EPS)).thenReturn(1.0000000244471735E8)
        `when`(mock.tan(-100 * PERIOD -3 * Math.PI/2 + EPS)).thenReturn(-9.999999877077691E7)
        `when`(mock.tan(-100 * PERIOD -2 * Math.PI + EPS)).thenReturn(1.0000000184154651E-8)
        `when`(mock.cot(-100 * PERIOD - 0.0)).thenReturn(Double.POSITIVE_INFINITY)
        `when`(mock.cot(-100 * PERIOD - 0.0 - EPS)).thenReturn(-1.0E8)
        `when`(mock.cot(-100 * PERIOD -Math.PI/2)).thenReturn(-6.123233995736766E-17)
        `when`(mock.cot(-100 * PERIOD -Math.PI/2 - EPS)).thenReturn(9.999999877992951E-9)
        `when`(mock.cot(-100 * PERIOD -Math.PI/2 + EPS)).thenReturn(-1.0000000000457631E-8)
        `when`(mock.cot(-100 * PERIOD -Math.PI)).thenReturn(8.165619676597685E15)
        `when`(mock.cot(-100 * PERIOD -Math.PI - EPS)).thenReturn(-1.0000000183239393E8)
        `when`(mock.cot(-100 * PERIOD -Math.PI + EPS)).thenReturn(9.99999993831003E7)
        `when`(mock.cot(-100 * PERIOD -3 * Math.PI/2)).thenReturn(-1.83697019872103E-16)
        `when`(mock.cot(-100 * PERIOD -3 * Math.PI/2 - EPS)).thenReturn(9.99999975552827E-9)
        `when`(mock.cot(-100 * PERIOD -3 * Math.PI/2 + EPS)).thenReturn(-1.000000012292231E-8)
        `when`(mock.cot(-100 * PERIOD -2 * Math.PI + EPS)).thenReturn(9.999999815845352E7)
        `when`(mock.sec(-100 * PERIOD - 0.0)).thenReturn(1.0)
        `when`(mock.sec(-100 * PERIOD - 0.0 - EPS)).thenReturn(1.0)
        `when`(mock.sec(-100 * PERIOD -Math.PI/2)).thenReturn(1.633123935319537E16)
        `when`(mock.sec(-100 * PERIOD -Math.PI/2 - EPS)).thenReturn(-1.0000000122007051E8)
        `when`(mock.sec(-100 * PERIOD -Math.PI/2 + EPS)).thenReturn(9.99999999954237E7)
        `when`(mock.sec(-100 * PERIOD -Math.PI)).thenReturn(-1.0)
        `when`(mock.sec(-100 * PERIOD -Math.PI - EPS)).thenReturn(-1.0)
        `when`(mock.sec(-100 * PERIOD -Math.PI + EPS)).thenReturn(-1.0)
        `when`(mock.sec(-100 * PERIOD -3 * Math.PI/2)).thenReturn(-5.443746451065123E15)
        `when`(mock.sec(-100 * PERIOD -3 * Math.PI/2 - EPS)).thenReturn(1.0000000244471735E8)
        `when`(mock.sec(-100 * PERIOD -3 * Math.PI/2 + EPS)).thenReturn(-9.999999877077691E7)
        `when`(mock.sec(-100 * PERIOD -2 * Math.PI + EPS)).thenReturn(1.0)
        `when`(mock.csc(-100 * PERIOD - 0.0)).thenReturn(Double.POSITIVE_INFINITY)
        `when`(mock.csc(-100 * PERIOD - 0.0 - EPS)).thenReturn(-1.0E8)
        `when`(mock.csc(-100 * PERIOD -Math.PI/2)).thenReturn(-1.0)
        `when`(mock.csc(-100 * PERIOD -Math.PI/2 - EPS)).thenReturn(-1.0)
        `when`(mock.csc(-100 * PERIOD -Math.PI/2 + EPS)).thenReturn(-1.0)
        `when`(mock.csc(-100 * PERIOD -Math.PI)).thenReturn(-8.165619676597685E15)
        `when`(mock.csc(-100 * PERIOD -Math.PI - EPS)).thenReturn(1.0000000183239393E8)
        `when`(mock.csc(-100 * PERIOD -Math.PI + EPS)).thenReturn(-9.99999993831003E7)
        `when`(mock.csc(-100 * PERIOD -3 * Math.PI/2)).thenReturn(1.0)
        `when`(mock.csc(-100 * PERIOD -3 * Math.PI/2 - EPS)).thenReturn(1.0)
        `when`(mock.csc(-100 * PERIOD -3 * Math.PI/2 + EPS)).thenReturn(1.0)
        `when`(mock.csc(-100 * PERIOD -2 * Math.PI + EPS)).thenReturn(9.999999815845354E7)

        `when`(mock.sin(-100 * PERIOD -0.19)).thenReturn(-0.18885889497650057)
        `when`(mock.sin(-100 * PERIOD -0.2)).thenReturn(-0.19866933079506122)
        `when`(mock.sin(-100 * PERIOD -0.642)).thenReturn(-0.5987984374182153)
        `when`(mock.sin(-100 * PERIOD -0.915)).thenReturn(-0.7925625868748546)
        `when`(mock.sin(-100 * PERIOD -0.9331)).thenReturn(-0.8034693714797926)
        `when`(mock.sin(-100 * PERIOD -0.9351)).thenReturn(-0.8046584559315121)
        `when`(mock.sin(-100 * PERIOD -1.0501)).thenReturn(-0.8674729783616071)
        `when`(mock.sin(-100 * PERIOD -1.0514)).thenReturn(-0.8681189747588872)
        `when`(mock.sin(-100 * PERIOD -1.054)).thenReturn(-0.8694065651016113)
        `when`(mock.sin(-100 * PERIOD -2.284)).thenReturn(-0.7562697254476853)
        `when`(mock.sin(-100 * PERIOD -2.285)).thenReturn(-0.755615087456462)
        `when`(mock.sin(-100 * PERIOD -2.29)).thenReturn(-0.7523305763941707)
        `when`(mock.sin(-100 * PERIOD -2.344)).thenReturn(-0.7156767994719299)
        `when`(mock.sin(-100 * PERIOD -2.356194490192345)).thenReturn(-0.7071067811865476)
        `when`(mock.sin(-100 * PERIOD -2.4)).thenReturn(-0.675463180551151)
        `when`(mock.sin(-100 * PERIOD -2.4227)).thenReturn(-0.6585517584922757)
        `when`(mock.sin(-100 * PERIOD -2.4401)).thenReturn(-0.6453586135871151)
        `when`(mock.sin(-100 * PERIOD -2.5)).thenReturn(-0.5984721441039564)
        `when`(mock.sin(-100 * PERIOD -2.668)).thenReturn(-0.45608645176503637)
        `when`(mock.sin(-100 * PERIOD -3.0)).thenReturn(-0.1411200080598672)
        `when`(mock.sin(-100 * PERIOD -3.3)).thenReturn(0.1577456941432482)
        `when`(mock.sin(-100 * PERIOD -3.38)).thenReturn(0.236155320696897)
        `when`(mock.sin(-100 * PERIOD -3.542)).thenReturn(0.3897935008794568)
        `when`(mock.sin(-100 * PERIOD -3.597)).thenReturn(0.43982818074075963)
        `when`(mock.sin(-100 * PERIOD -5.497)).thenReturn(0.7076631567751693)
        `when`(mock.sin(-100 * PERIOD -5.498)).thenReturn(0.7069562530939006)
        `when`(mock.sin(-100 * PERIOD -5.501)).thenReturn(0.7048313031440786)
        `when`(mock.sin(-100 * PERIOD -5.535)).thenReturn(0.6803098478595606)
        `when`(mock.sin(-100 * PERIOD -5.537)).thenReturn(0.6788426389607648)
        `when`(mock.sin(-100 * PERIOD -6.045)).thenReturn(0.2359395559550809)
        `when`(mock.sin(-100 * PERIOD -6.05)).thenReturn(0.23107778829939224)

        `when`(mock.cos(-100 * PERIOD -0.19)).thenReturn(0.9820042351172703)
        `when`(mock.cos(-100 * PERIOD -0.2)).thenReturn(0.9800665778412416)
        `when`(mock.cos(-100 * PERIOD -0.642)).thenReturn(0.8008997636068472)
        `when`(mock.cos(-100 * PERIOD -0.915)).thenReturn(0.6097905754324501)
        `when`(mock.cos(-100 * PERIOD -0.9331)).thenReturn(0.5953460918607487)
        `when`(mock.cos(-100 * PERIOD -0.9351)).thenReturn(0.5937379634972947)
        `when`(mock.cos(-100 * PERIOD -1.0501)).thenReturn(0.4974843030814569)
        `when`(mock.cos(-100 * PERIOD -1.0514)).thenReturn(0.49635616815304967)
        `when`(mock.cos(-100 * PERIOD -1.054)).thenReturn(0.4940973836787822)
        `when`(mock.cos(-100 * PERIOD -2.284)).thenReturn(-0.6542599654352104)
        `when`(mock.cos(-100 * PERIOD -2.285)).thenReturn(-0.6550159079046579)
        `when`(mock.cos(-100 * PERIOD -2.29)).thenReturn(-0.6587857799181878)
        `when`(mock.cos(-100 * PERIOD -2.344)).thenReturn(-0.6984316134723678)
        `when`(mock.cos(-100 * PERIOD -3 * Math.PI/4)).thenReturn(-0.7071067811865475)
        `when`(mock.cos(-100 * PERIOD -2.4)).thenReturn(-0.7373937155412454)
        `when`(mock.cos(-100 * PERIOD -2.4227)).thenReturn(-0.752535435303037)
        `when`(mock.cos(-100 * PERIOD -2.4401)).thenReturn(-0.7638797417584241)
        `when`(mock.cos(-100 * PERIOD -2.5)).thenReturn(-0.8011436155469337)
        `when`(mock.cos(-100 * PERIOD -2.668)).thenReturn(-0.889935474355517)
        `when`(mock.cos(-100 * PERIOD -3.0)).thenReturn(-0.9899924966004454)
        `when`(mock.cos(-100 * PERIOD -3.3)).thenReturn(-0.9874797699088649)
        `when`(mock.cos(-100 * PERIOD -3.38)).thenReturn(-0.9717153207120621)
        `when`(mock.cos(-100 * PERIOD -3.542)).thenReturn(-0.920902289427134)
        `when`(mock.cos(-100 * PERIOD -3.597)).thenReturn(-0.8980819402628435)
        `when`(mock.cos(-100 * PERIOD -5.497)).thenReturn(0.7065499674778862)
        `when`(mock.cos(-100 * PERIOD -5.498)).thenReturn(0.7072572772417635)
        `when`(mock.cos(-100 * PERIOD -5.501)).thenReturn(0.709374960164383)
        `when`(mock.cos(-100 * PERIOD -5.535)).thenReturn(0.7329246283931939)
        `when`(mock.cos(-100 * PERIOD -5.537)).thenReturn(0.7342837813330652)
        `when`(mock.cos(-100 * PERIOD -6.045)).thenReturn(0.9717677325038732)
        `when`(mock.cos(-100 * PERIOD -6.05)).thenReturn(0.9729352782968974)

        `when`(mock.tan(-100 * PERIOD -0.19)).thenReturn(-0.19231983755543292)
        `when`(mock.tan(-100 * PERIOD -0.2)).thenReturn(-0.2027100355086725)
        `when`(mock.tan(-100 * PERIOD -0.642)).thenReturn(-0.747657153401482)
        `when`(mock.tan(-100 * PERIOD -0.915)).thenReturn(-1.2997291509675868)
        `when`(mock.tan(-100 * PERIOD -0.9331)).thenReturn(-1.3495836832800168)
        `when`(mock.tan(-100 * PERIOD -0.9351)).thenReturn(-1.3552417150350846)
        `when`(mock.tan(-100 * PERIOD -1.0501)).thenReturn(-1.7437192952388874)
        `when`(mock.tan(-100 * PERIOD -1.0514)).thenReturn(-1.748983956398031)
        `when`(mock.tan(-100 * PERIOD -1.054)).thenReturn(-1.7595854457444802)
        `when`(mock.tan(-100 * PERIOD -2.284)).thenReturn(1.1559162495058346)
        `when`(mock.tan(-100 * PERIOD -2.285)).thenReturn(1.1535828036201634)
        `when`(mock.tan(-100 * PERIOD -2.29)).thenReturn(1.1419957736300865)
        `when`(mock.tan(-100 * PERIOD -2.344)).thenReturn(1.0246913021502917)
        `when`(mock.tan(-100 * PERIOD -3 * Math.PI/4)).thenReturn(1.0000000000000002)
        `when`(mock.tan(-100 * PERIOD -2.4)).thenReturn(0.9160142896734107)
        `when`(mock.tan(-100 * PERIOD -2.4227)).thenReturn(0.8751106294776467)
        `when`(mock.tan(-100 * PERIOD -2.4401)).thenReturn(0.8448432106623517)
        `when`(mock.tan(-100 * PERIOD -2.5)).thenReturn(0.7470222972386603)
        `when`(mock.tan(-100 * PERIOD -2.668)).thenReturn(0.5124938435512192)
        `when`(mock.tan(-100 * PERIOD -3.0)).thenReturn(0.1425465430742778)
        `when`(mock.tan(-100 * PERIOD -3.3)).thenReturn(-0.15974574766003222)
        `when`(mock.tan(-100 * PERIOD -3.38)).thenReturn(-0.2430293272764754)
        `when`(mock.tan(-100 * PERIOD -3.542)).thenReturn(-0.4232734627274472)
        `when`(mock.tan(-100 * PERIOD -3.597)).thenReturn(-0.4897417050965686)
        `when`(mock.tan(-100 * PERIOD -5.497)).thenReturn(1.0015755280567866)
        `when`(mock.tan(-100 * PERIOD -5.498)).thenReturn(0.9995743781541042)
        `when`(mock.tan(-100 * PERIOD -5.501)).thenReturn(0.9935948443693989)
        `when`(mock.tan(-100 * PERIOD -5.535)).thenReturn(0.9282125630721649)
        `when`(mock.tan(-100 * PERIOD -5.537)).thenReturn(0.9244962999568791)
        `when`(mock.tan(-100 * PERIOD -6.045)).thenReturn(0.24279418637121758)
        `when`(mock.tan(-100 * PERIOD -6.05)).thenReturn(0.23750581714324204)

        `when`(mock.cot(-100 * PERIOD -0.19)).thenReturn(-5.199671613240454)
        `when`(mock.cot(-100 * PERIOD -0.2)).thenReturn(-4.933154875586893)
        `when`(mock.cot(-100 * PERIOD -0.642)).thenReturn(-1.3375114455208232)
        `when`(mock.cot(-100 * PERIOD -0.915)).thenReturn(-0.7693910683280031)
        `when`(mock.cot(-100 * PERIOD -0.9331)).thenReturn(-0.7409692428776321)
        `when`(mock.cot(-100 * PERIOD -0.9351)).thenReturn(-0.7378757522779705)
        `when`(mock.cot(-100 * PERIOD -1.0501)).thenReturn(-0.5734868007313076)
        `when`(mock.cot(-100 * PERIOD -1.0514)).thenReturn(-0.5717605335039572)
        `when`(mock.cot(-100 * PERIOD -1.054)).thenReturn(-0.5683156805021766)
        `when`(mock.cot(-100 * PERIOD -2.284)).thenReturn(0.8651145793888698)
        `when`(mock.cot(-100 * PERIOD -2.285)).thenReturn(0.8668645171042848)
        `when`(mock.cot(-100 * PERIOD -2.29)).thenReturn(0.8756599832425636)
        `when`(mock.cot(-100 * PERIOD -2.344)).thenReturn(0.9759036676719344)
        `when`(mock.cot(-100 * PERIOD -3 * Math.PI/4)).thenReturn(0.9999999999999998)
        `when`(mock.cot(-100 * PERIOD -2.4)).thenReturn(1.0916860263790569)
        `when`(mock.cot(-100 * PERIOD -2.4227)).thenReturn(1.1427126654796773)
        `when`(mock.cot(-100 * PERIOD -2.4401)).thenReturn(1.1836515786355275)
        `when`(mock.cot(-100 * PERIOD -2.5)).thenReturn(1.3386481283041514)
        `when`(mock.cot(-100 * PERIOD -2.668)).thenReturn(1.9512429516630065)
        `when`(mock.cot(-100 * PERIOD -3.0)).thenReturn(7.015252551434534)
        `when`(mock.cot(-100 * PERIOD -3.3)).thenReturn(-6.259947539437359)
        `when`(mock.cot(-100 * PERIOD -3.38)).thenReturn(-4.114729737380125)
        `when`(mock.cot(-100 * PERIOD -3.542)).thenReturn(-2.3625388503127507)
        `when`(mock.cot(-100 * PERIOD -3.597)).thenReturn(-2.0418926744309376)
        `when`(mock.cot(-100 * PERIOD -5.497)).thenReturn(0.9984269503271077)
        `when`(mock.cot(-100 * PERIOD -5.498)).thenReturn(1.0004258030769875)
        `when`(mock.cot(-100 * PERIOD -5.501)).thenReturn(1.006446446121272)
        `when`(mock.cot(-100 * PERIOD -5.535)).thenReturn(1.0773394368744973)
        `when`(mock.cot(-100 * PERIOD -5.537)).thenReturn(1.0816700943493691)
        `when`(mock.cot(-100 * PERIOD -6.045)).thenReturn(4.118714763915561)
        `when`(mock.cot(-100 * PERIOD -6.05)).thenReturn(4.210423188906107)

        `when`(mock.sec(-100 * PERIOD -0.19)).thenReturn(1.0183255471200494)
        `when`(mock.sec(-100 * PERIOD -0.2)).thenReturn(1.0203388449411928)
        `when`(mock.sec(-100 * PERIOD -0.642)).thenReturn(1.2485956987882054)
        `when`(mock.sec(-100 * PERIOD -0.915)).thenReturn(1.6399072735599791)
        `when`(mock.sec(-100 * PERIOD -0.9331)).thenReturn(1.6796952456251275)
        `when`(mock.sec(-100 * PERIOD -0.9351)).thenReturn(1.6842446693314002)
        `when`(mock.sec(-100 * PERIOD -1.0501)).thenReturn(2.0101136735489367)
        `when`(mock.sec(-100 * PERIOD -1.0514)).thenReturn(2.014682327251051)
        `when`(mock.sec(-100 * PERIOD -1.054)).thenReturn(2.0238925220662782)
        `when`(mock.sec(-100 * PERIOD -2.284)).thenReturn(-1.528444430089506)
        `when`(mock.sec(-100 * PERIOD -2.285)).thenReturn(-1.5266804789503783)
        `when`(mock.sec(-100 * PERIOD -2.29)).thenReturn(-1.5179441185330176)
        `when`(mock.sec(-100 * PERIOD -2.344)).thenReturn(-1.431779405042013)
        `when`(mock.sec(-100 * PERIOD -3 * Math.PI/4)).thenReturn(-1.4142135623730951)
        `when`(mock.sec(-100 * PERIOD -2.4)).thenReturn(-1.3561276410743508)
        `when`(mock.sec(-100 * PERIOD -2.4227)).thenReturn(-1.3288410792208236)
        `when`(mock.sec(-100 * PERIOD -2.4401)).thenReturn(-1.3091065848899663)
        `when`(mock.sec(-100 * PERIOD -2.5)).thenReturn(-1.2482156514688179)
        `when`(mock.sec(-100 * PERIOD -2.668)).thenReturn(-1.1236769730122182)
        `when`(mock.sec(-100 * PERIOD -3.0)).thenReturn(-1.0101086659079939)
        `when`(mock.sec(-100 * PERIOD -3.3)).thenReturn(-1.0126789737599289)
        `when`(mock.sec(-100 * PERIOD -3.38)).thenReturn(-1.0291079894337893)
        `when`(mock.sec(-100 * PERIOD -3.542)).thenReturn(-1.085891534293036)
        `when`(mock.sec(-100 * PERIOD -3.597)).thenReturn(-1.113484143448345)
        `when`(mock.sec(-100 * PERIOD -5.497)).thenReturn(1.4153280674113091)
        `when`(mock.sec(-100 * PERIOD -5.498)).thenReturn(1.4139126343102548)
        `when`(mock.sec(-100 * PERIOD -5.501)).thenReturn(1.4096917091185044)
        `when`(mock.sec(-100 * PERIOD -5.535)).thenReturn(1.3643967759581515)
        `when`(mock.sec(-100 * PERIOD -5.537)).thenReturn(1.3618712893052558)
        `when`(mock.sec(-100 * PERIOD -6.045)).thenReturn(1.0290524850247735)
        `when`(mock.sec(-100 * PERIOD -6.05)).thenReturn(1.0278175972305976)

        `when`(mock.csc(-100 * PERIOD -0.19)).thenReturn(-5.294958440397676)
        `when`(mock.csc(-100 * PERIOD -0.2)).thenReturn(-5.033489547672344)
        `when`(mock.csc(-100 * PERIOD -0.642)).thenReturn(-1.670011037957295)
        `when`(mock.csc(-100 * PERIOD -0.915)).thenReturn(-1.2617300091631751)
        `when`(mock.csc(-100 * PERIOD -0.9331)).thenReturn(-1.2446025144160087)
        `when`(mock.csc(-100 * PERIOD -0.9351)).thenReturn(-1.2427633024030686)
        `when`(mock.csc(-100 * PERIOD -1.0501)).thenReturn(-1.152773659749836)
        `when`(mock.csc(-100 * PERIOD -1.0514)).thenReturn(-1.1519158422700548)
        `when`(mock.csc(-100 * PERIOD -1.054)).thenReturn(-1.1502098559413636)
        `when`(mock.csc(-100 * PERIOD -2.284)).thenReturn(-1.322279560256144)
        `when`(mock.csc(-100 * PERIOD -2.285)).thenReturn(-1.323425136157858)
        `when`(mock.csc(-100 * PERIOD -2.29)).thenReturn(-1.3292029213977703)
        `when`(mock.csc(-100 * PERIOD -2.344)).thenReturn(-1.3972787726776406)
        `when`(mock.csc(-100 * PERIOD -3 * Math.PI/4)).thenReturn(-1.414213562373095)
        `when`(mock.csc(-100 * PERIOD -2.4)).thenReturn(-1.4804655957472619)
        `when`(mock.csc(-100 * PERIOD -2.4227)).thenReturn(-1.5184835316353185)
        `when`(mock.csc(-100 * PERIOD -2.4401)).thenReturn(-1.5495260758071727)
        `when`(mock.csc(-100 * PERIOD -2.5)).thenReturn(-1.67092154555868)
        `when`(mock.csc(-100 * PERIOD -2.668)).thenReturn(-2.192566773536113)
        `when`(mock.csc(-100 * PERIOD -3.0)).thenReturn(-7.086167395737187)
        `when`(mock.csc(-100 * PERIOD -3.3)).thenReturn(6.339317250028417)
        `when`(mock.csc(-100 * PERIOD -3.38)).thenReturn(4.2345012470986845)
        `when`(mock.csc(-100 * PERIOD -3.542)).thenReturn(2.565460936993018)
        `when`(mock.csc(-100 * PERIOD -3.597)).thenReturn(2.273615115602183)
        `when`(mock.csc(-100 * PERIOD -5.497)).thenReturn(1.4131016860578325)
        `when`(mock.csc(-100 * PERIOD -5.498)).thenReturn(1.4145146826605355)
        `when`(mock.csc(-100 * PERIOD -5.501)).thenReturn(1.418779210768941)
        `when`(mock.csc(-100 * PERIOD -5.535)).thenReturn(1.4699184542841344)
        `when`(mock.csc(-100 * PERIOD -5.537)).thenReturn(1.473095445994513)
        `when`(mock.csc(-100 * PERIOD -6.045)).thenReturn(4.238373662915531)
        `when`(mock.csc(-100 * PERIOD -6.05)).thenReturn(4.327547045345466)

//===========================================================================================
//                        positive values
//===========================================================================================

        `when`(mock.ln(0.35)).thenReturn(-1.0498221244986778)
        `when`(mock.ln(4.339)).thenReturn(1.4676439068162137)
        `when`(mock.ln(10.0)).thenReturn(2.302585092994046)
        `when`(mock.ln(100000.0)).thenReturn(11.512925464970229)
        `when`(mock.ln(Double.POSITIVE_INFINITY)).thenReturn(Double.NaN)

        `when`(mock.log2(0.35)).thenReturn(-1.5145731728297585)
        `when`(mock.log2(4.339)).thenReturn(2.1173625861546554)
        `when`(mock.log2(10.0)).thenReturn(3.3219280948873626)
        `when`(mock.log2(100000.0)).thenReturn(16.609640474436812)
        `when`(mock.log2(Double.POSITIVE_INFINITY)).thenReturn(Double.NaN)

        `when`(mock.log5(0.35)).thenReturn(-0.6522911610246187)
        `when`(mock.log5(4.339)).thenReturn(0.9118984307984652)
        `when`(mock.log5(10.0)).thenReturn(1.4306765580733933)
        `when`(mock.log5(100000.0)).thenReturn(7.153382790366966)
        `when`(mock.log5(Double.POSITIVE_INFINITY)).thenReturn(Double.NaN)

        `when`(mock.log10(0.35)).thenReturn(-0.4559319556497244)
        `when`(mock.log10(4.339)).thenReturn(0.637389650129212)
        `when`(mock.log10(10.0)).thenReturn(1.0)
        `when`(mock.log10(100000.0)).thenReturn(5.0)
        `when`(mock.log10(Double.POSITIVE_INFINITY)).thenReturn(Double.NaN)
    }

    @Test
    fun testOnMainPeriod() {
        assertBigDouble(Double.NaN, calculator.calculate(Double.NEGATIVE_INFINITY))
        assertBigDouble(-2.057854457790956E10, calculator.calculate(-0.19))
        assertBigDouble(-1.186570401096842E10, calculator.calculate(-0.2))
        assertBigDouble(-3167.644140250528, calculator.calculate(-0.642))
        assertBigDouble(-1.5832491308009597E63, calculator.calculate(-0.915))
        assertBigDouble(-1.1456688939070263E66, calculator.calculate(-0.9331))
        assertBigDouble(2.949913573275083E64, calculator.calculate(-0.9351))
        assertBigDouble(-3.459139462413303E95, calculator.calculate(-1.0501))
        assertBigDouble(-2.1586232559181542E95, calculator.calculate(-1.0514))
        assertBigDouble(-3.637595146522363E95, calculator.calculate(-1.054))
        assertBigDouble(4698531.583429447, calculator.calculate(-2.284))
        assertBigDouble(4689757.264512879, calculator.calculate(-2.285))
        assertBigDouble(4818554.651139655, calculator.calculate(-2.29))
        assertBigDouble(4.661155269375071E7, calculator.calculate(-2.344))
        assertEquals(0.0, calculator.calculate(-3 * Math.PI / 4), 1E-3)
        assertBigDouble(-1168534.0723719394, calculator.calculate(-2.4227))
        assertBigDouble(-2.5692678883176365E8, calculator.calculate(-2.4401))
        assertBigDouble(-1.1820018502257984E7, calculator.calculate(-2.5))
        assertBigDouble(-7572.567532493296, calculator.calculate(-2.668))
        assertBigDouble(-1.6274110779708395E11, calculator.calculate(-3.0))
        assertBigDouble(-2138073.650667048, calculator.calculate(-3.3))
        assertBigDouble(-8.094330766072657E-15, calculator.calculate(-3.38))
        assertBigDouble(-28.266518244731415, calculator.calculate(-3.542))
        assertBigDouble(-9.846278079315185, calculator.calculate(-3.597))
        assertBigDouble(-6.282401637852932E55, calculator.calculate(-5.497))
        assertBigDouble(1.2539732706036974E55, calculator.calculate(-5.498))
        assertBigDouble(7.617779751608887E55, calculator.calculate(-5.501))
        assertBigDouble(3.140387178975765E52, calculator.calculate(-5.535))
        assertBigDouble(1.8176701451466236E52, calculator.calculate(-5.537))
        assertBigDouble(-1.1804506174592054E-14, calculator.calculate(-6.045))
        assertBigDouble(-5.929431390477587E-5, calculator.calculate(-6.05))

    }

    @Test
    fun testZeroAndCloseToIt() {
        assertEquals(Double.NaN, calculator.calculate(0.0))
        assertBigDouble(-1.562500435646825E110, calculator.calculate(0 - 1.0E-8))
    }

    @Test
    fun testAsymptotesAndCloserToThem() {
        assertAll (
                {assertBigDouble(Double.NaN, calculator.calculate(-Math.PI / 2))},
                {assertBigDouble(Double.NEGATIVE_INFINITY, calculator.calculate(-Math.PI / 2 + EPS))},
                {assertBigDouble(Double.POSITIVE_INFINITY, calculator.calculate(-Math.PI / 2 - EPS))},
                {assertBigDouble(Double.POSITIVE_INFINITY, calculator.calculate(-3 * Math.PI / 2))},
                {assertBigDouble(Double.POSITIVE_INFINITY, calculator.calculate(-3 * Math.PI / 2 + EPS))},
                {assertBigDouble(Double.NEGATIVE_INFINITY, calculator.calculate(-3 * Math.PI / 2 - EPS))},
                {assertBigDouble(Double.NaN, calculator.calculate(-2 * Math.PI))},
                {assertBigDouble(Double.NEGATIVE_INFINITY, calculator.calculate(-2 * Math.PI + EPS))}
        )

    }

    @Test
    fun testOnPeriod() {
        assertBigDouble(Double.NaN, calculator.calculate(Double.NEGATIVE_INFINITY))
        assertBigDouble(-2.057854457790956E10, calculator.calculate(-PERIOD -0.19))
        assertBigDouble(-1.186570401096842E10, calculator.calculate(-PERIOD -0.2))
        assertBigDouble(-3167.644140250528, calculator.calculate(-PERIOD -0.642))
        assertBigDouble(-1.5832491308009597E63, calculator.calculate(-PERIOD -0.915))
        assertBigDouble(-1.1456688939070263E66, calculator.calculate(-PERIOD -0.9331))
        assertBigDouble(2.949913573275083E64, calculator.calculate(-PERIOD -0.9351))
        assertBigDouble(-3.459139462413303E95, calculator.calculate(-PERIOD -1.0501))
        assertBigDouble(-2.1586232559181542E95, calculator.calculate(-PERIOD -1.0514))
        assertBigDouble(-3.637595146522363E95, calculator.calculate(-PERIOD -1.054))
        assertBigDouble(4698531.583429447, calculator.calculate(-PERIOD -2.284))
        assertBigDouble(4689757.264512879, calculator.calculate(-PERIOD -2.285))
        assertBigDouble(4818554.651139655, calculator.calculate(-PERIOD -2.29))
        assertBigDouble(4.661155269375071E7, calculator.calculate(-PERIOD -2.344))
        assertEquals(0.0, calculator.calculate(-PERIOD -3 * Math.PI / 4), 1E-3)
        assertBigDouble(-1168534.0723719394, calculator.calculate(-PERIOD -2.4227))
        assertBigDouble(-2.5692678883176365E8, calculator.calculate(-PERIOD -2.4401))
        assertBigDouble(-1.1820018502257984E7, calculator.calculate(-PERIOD -2.5))
        assertBigDouble(-7572.567532493296, calculator.calculate(-PERIOD -2.668))
        assertBigDouble(-1.6274110779708395E11, calculator.calculate(-PERIOD -3.0))
        assertBigDouble(-2138073.650667048, calculator.calculate(-PERIOD -3.3))
        assertBigDouble(-8.094330766072657E-15, calculator.calculate(-PERIOD -3.38))
        assertBigDouble(-28.266518244731415, calculator.calculate(-PERIOD -3.542))
        assertBigDouble(-9.846278079315185, calculator.calculate(-PERIOD -3.597))
        assertBigDouble(-6.282401637852932E55, calculator.calculate(-PERIOD -5.497))
        assertBigDouble(1.2539732706036974E55, calculator.calculate(-PERIOD -5.498))
        assertBigDouble(7.617779751608887E55, calculator.calculate(-PERIOD -5.501))
        assertBigDouble(3.140387178975765E52, calculator.calculate(-PERIOD -5.535))
        assertBigDouble(1.8176701451466236E52, calculator.calculate(-PERIOD -5.537))
        assertBigDouble(-1.1804506174592054E-14, calculator.calculate(-PERIOD -6.045))
        assertBigDouble(-5.929431390477587E-5, calculator.calculate(-PERIOD -6.05))
    }

    @Test
    fun testOn100thPeriod() {
        assertBigDouble(Double.NaN, calculator.calculate(Double.NEGATIVE_INFINITY))
        assertBigDouble(-2.057854457790956E10, calculator.calculate(-100 * PERIOD -0.19))
        assertBigDouble(-1.186570401096842E10, calculator.calculate(-100 * PERIOD -0.2))
        assertBigDouble(-3167.644140250528, calculator.calculate(-100 * PERIOD -0.642))
        assertBigDouble(-1.5832491308009597E63, calculator.calculate(-100 * PERIOD -0.915))
        assertBigDouble(-1.1456688939070263E66, calculator.calculate(-100 * PERIOD -0.9331))
        assertBigDouble(2.949913573275083E64, calculator.calculate(-100 * PERIOD -0.9351))
        assertBigDouble(-3.459139462413303E95, calculator.calculate(-100 * PERIOD -1.0501))
        assertBigDouble(-2.1586232559181542E95, calculator.calculate(-100 * PERIOD -1.0514))
        assertBigDouble(-3.637595146522363E95, calculator.calculate(-100 * PERIOD -1.054))
        assertBigDouble(4698531.583429447, calculator.calculate(-100 * PERIOD -2.284))
        assertBigDouble(4689757.264512879, calculator.calculate(-100 * PERIOD -2.285))
        assertBigDouble(4818554.651139655, calculator.calculate(-100 * PERIOD -2.29))
        assertBigDouble(4.661155269375071E7, calculator.calculate(-100 * PERIOD -2.344))
        assertEquals(0.0, calculator.calculate(-100 * PERIOD -3 * Math.PI / 4), 1E-3)
        assertBigDouble(-1168534.0723719394, calculator.calculate(-100 * PERIOD -2.4227))
        assertBigDouble(-2.5692678883176365E8, calculator.calculate(-100 * PERIOD -2.4401))
        assertBigDouble(-1.1820018502257984E7, calculator.calculate(-100 * PERIOD -2.5))
        assertBigDouble(-7572.567532493296, calculator.calculate(-100 * PERIOD -2.668))
        assertBigDouble(-1.6274110779708395E11, calculator.calculate(-100 * PERIOD -3.0))
        assertBigDouble(-2138073.650667048, calculator.calculate(-100 * PERIOD -3.3))
        assertBigDouble(-8.094330766072657E-15, calculator.calculate(-100 * PERIOD -3.38))
        assertBigDouble(-28.266518244731415, calculator.calculate(-100 * PERIOD -3.542))
        assertBigDouble(-9.846278079315185, calculator.calculate(-100 * PERIOD -3.597))
        assertBigDouble(-6.282401637852932E55, calculator.calculate(-100 * PERIOD -5.497))
        assertBigDouble(1.2539732706036974E55, calculator.calculate(-100 * PERIOD -5.498))
        assertBigDouble(7.617779751608887E55, calculator.calculate(-100 * PERIOD -5.501))
        assertBigDouble(3.140387178975765E52, calculator.calculate(-100 * PERIOD -5.535))
        assertBigDouble(1.8176701451466236E52, calculator.calculate(-100 * PERIOD -5.537))
        assertBigDouble(-1.1804506174592054E-14, calculator.calculate(-100 * PERIOD -6.045))
        assertBigDouble(-5.929431390477587E-5, calculator.calculate(-100 * PERIOD -6.05))
    }

    @Test
    fun testLogFunction() {
        assertBigDouble(Double.NaN, calculator.calculate(Double.POSITIVE_INFINITY))
        assertEquals(5.633, calculator.calculate(0.35), 1E-3)
        assertEquals(2.132, calculator.calculate(4.339), 1E-3)
        assertEquals(2.517, calculator.calculate(10.0), 1E-3)
        assertEquals(57.865, calculator.calculate(100000.0), 1E-3)
    }
}